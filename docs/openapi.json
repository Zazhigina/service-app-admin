{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/param/{key}": {
      "get": {
        "tags": [
          "Ведение параметров"
        ],
        "summary": "Поиск параметра по ключу",
        "operationId": "findByKey",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ParamDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Ведение параметров"
        ],
        "summary": "Изменение значения параметра",
        "operationId": "editParam",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParamEditableDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ParamDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/letter-template/{id}": {
      "put": {
        "tags": [
          "Шаблоны"
        ],
        "summary": "Изменение данных шаблона",
        "operationId": "changeLetterTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LetterTemplateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/LetterTemplateDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Шаблоны"
        ],
        "summary": "Удаление шаблона",
        "operationId": "deleteLetterTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessInfo"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/letter-template/doc/{id}": {
      "put": {
        "tags": [
          "Шаблоны"
        ],
        "summary": "Замена файла шаблона",
        "operationId": "replaceLetterTemplateDoc",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessInfo"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/param/find": {
      "post": {
        "tags": [
          "Ведение параметров"
        ],
        "summary": "Поиск параметров, поддерживается фильтрация/сортировка/пагинация",
        "operationId": "findParamsByFilters",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataFilterObject"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageParamDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/letter-template": {
      "post": {
        "tags": [
          "Шаблоны"
        ],
        "summary": "Сохранение нового шаблона",
        "operationId": "saveLetterTemplate",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file",
                  "request"
                ],
                "type": "object",
                "properties": {
                  "request": {
                    "$ref": "#/components/schemas/LetterTemplateDto"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/LetterTemplateDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/letter-template/filter": {
      "post": {
        "tags": [
          "Шаблоны"
        ],
        "summary": "Поиск шаблонов с фильтром",
        "operationId": "findLetterTemplatesByFilter",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataFilterLetterTemplateSearchCriteria"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageLetterTemplateDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/letter-template/{id}/doc": {
      "get": {
        "tags": [
          "Шаблоны"
        ],
        "summary": "Выгрузка шаблона",
        "operationId": "downloadLetterTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/letter-template/{id}/doc/info": {
      "get": {
        "tags": [
          "Шаблоны"
        ],
        "summary": "Данные загруженного документа шаблона",
        "operationId": "getLetterTemplateDocInfo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/letter-template/by-letter-type": {
      "get": {
        "tags": [
          "Шаблоны"
        ],
        "summary": "Поиск шаблона по наименованию параметра",
        "operationId": "findLetterTemplateByLetterType",
        "parameters": [
          {
            "name": "letterType",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/LetterTemplateDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ParamEditableDto": {
        "required": [
          "name",
          "val"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "val": {
            "type": "string"
          }
        }
      },
      "ParamDto": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "val": {
            "type": "string"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "createUser": {
            "type": "string"
          },
          "lastUpdateDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdateUser": {
            "type": "string"
          }
        }
      },
      "LetterTemplateDto": {
        "required": [
          "letterType",
          "title",
          "typeTemplate"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "letterType": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "letterSample": {
            "type": "integer",
            "format": "int64"
          },
          "typeTemplate": {
            "type": "string",
            "enum": [
              "DOCUMENT",
              "TEMPLATE"
            ]
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "createUser": {
            "type": "string"
          },
          "lastUpdateDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdateUser": {
            "type": "string"
          }
        }
      },
      "SuccessInfo": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "DataFilterObject": {
        "type": "object",
        "properties": {
          "searchCriteria": {
            "type": "object"
          },
          "subFilter": {
            "$ref": "#/components/schemas/QueryFilter"
          }
        }
      },
      "QueryCondition": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "operator": {
            "type": "string",
            "enum": [
              "like",
              "not_like",
              "ilike",
              "not_ilike",
              "eq",
              "not_eq",
              "gt",
              "gte",
              "lt",
              "lte",
              "null",
              "not_null"
            ]
          },
          "value": {
            "type": "string"
          },
          "format": {
            "type": "string"
          },
          "filter": {
            "$ref": "#/components/schemas/QueryFilter"
          }
        }
      },
      "QueryFilter": {
        "type": "object",
        "properties": {
          "logic": {
            "type": "string",
            "enum": [
              "and",
              "or",
              "not"
            ]
          },
          "cond": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QueryCondition"
            }
          },
          "selectField": {
            "type": "string"
          }
        }
      },
      "PageParamDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParamDto"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "PageableObject": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "paged": {
            "type": "boolean"
          },
          "unpaged": {
            "type": "boolean"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SortObject": {
        "type": "object",
        "properties": {
          "empty": {
            "type": "boolean"
          },
          "sorted": {
            "type": "boolean"
          },
          "unsorted": {
            "type": "boolean"
          }
        }
      },
      "DataFilterLetterTemplateSearchCriteria": {
        "type": "object",
        "properties": {
          "searchCriteria": {
            "$ref": "#/components/schemas/LetterTemplateSearchCriteria"
          },
          "subFilter": {
            "$ref": "#/components/schemas/QueryFilter"
          }
        }
      },
      "LetterTemplateSearchCriteria": {
        "type": "object",
        "properties": {
          "letterType": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "Pageable": {
        "type": "object",
        "properties": {
          "page": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PageLetterTemplateDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LetterTemplateDto"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "DocumentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "filename": {
            "type": "string"
          },
          "fileMimeType": {
            "type": "string"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "createUser": {
            "type": "string"
          },
          "lastUpdateDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdateUser": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
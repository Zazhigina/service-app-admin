/*
 * This file is generated by jOOQ.
 */
package jooqdata;


import java.util.Arrays;
import java.util.List;

import jooqdata.tables.AParam;
import jooqdata.tables.TAnswerVersion;
import jooqdata.tables.TLetterTemplate;
import jooqdata.tables.TLetterTemplateAcceptableDocumentFormatEnum;
import jooqdata.tables.TLetterTemplateTypeTemplateEnum;
import jooqdata.tables.TLetterTemplateVariable;
import jooqdata.tables.TQuestion;

import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Admin extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>admin</code>
     */
    public static final Admin ADMIN = new Admin();

    /**
     * Ведение параметров приложения
     */
    public final AParam A_PARAM = AParam.A_PARAM;

    /**
     * Вариант ответа на вопрос
     */
    public final TAnswerVersion T_ANSWER_VERSION = TAnswerVersion.T_ANSWER_VERSION;

    /**
     * Шаблон письма
     */
    public final TLetterTemplate T_LETTER_TEMPLATE = TLetterTemplate.T_LETTER_TEMPLATE;

    /**
     * Допустимый формат документа (Enum)
     */
    public final TLetterTemplateAcceptableDocumentFormatEnum T_LETTER_TEMPLATE_ACCEPTABLE_DOCUMENT_FORMAT_ENUM = TLetterTemplateAcceptableDocumentFormatEnum.T_LETTER_TEMPLATE_ACCEPTABLE_DOCUMENT_FORMAT_ENUM;

    /**
     * Вид шаблона (Enum)
     */
    public final TLetterTemplateTypeTemplateEnum T_LETTER_TEMPLATE_TYPE_TEMPLATE_ENUM = TLetterTemplateTypeTemplateEnum.T_LETTER_TEMPLATE_TYPE_TEMPLATE_ENUM;

    /**
     * Переменные к шаблону письма
     */
    public final TLetterTemplateVariable T_LETTER_TEMPLATE_VARIABLE = TLetterTemplateVariable.T_LETTER_TEMPLATE_VARIABLE;

    /**
     * Преднастроенный вопрос
     */
    public final TQuestion T_QUESTION = TQuestion.T_QUESTION;

    /**
     * No further instances allowed
     */
    private Admin() {
        super("admin", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        return Arrays.asList(
            Sequences.GLOBAL_ID_SEQ
        );
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            AParam.A_PARAM,
            TAnswerVersion.T_ANSWER_VERSION,
            TLetterTemplate.T_LETTER_TEMPLATE,
            TLetterTemplateAcceptableDocumentFormatEnum.T_LETTER_TEMPLATE_ACCEPTABLE_DOCUMENT_FORMAT_ENUM,
            TLetterTemplateTypeTemplateEnum.T_LETTER_TEMPLATE_TYPE_TEMPLATE_ENUM,
            TLetterTemplateVariable.T_LETTER_TEMPLATE_VARIABLE,
            TQuestion.T_QUESTION
        );
    }
}

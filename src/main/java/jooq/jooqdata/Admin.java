/*
 * This file is generated by jOOQ.
 */
package jooqdata;


import jooqdata.tables.*;
import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;

import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Admin extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>admin</code>
     */
    public static final Admin ADMIN = new Admin();

    /**
     * Ведение параметров приложения
     */
    public final AParam A_PARAM = AParam.A_PARAM;

    /**
     * Вариант ответа на вопрос
     */
    public final TAnswerVersion T_ANSWER_VERSION = TAnswerVersion.T_ANSWER_VERSION;

    /**
     * Управление сервисами(заглушка)
     */
    public final TAppControl T_APP_CONTROL = TAppControl.T_APP_CONTROL;

    /**
     * Производственный календарь
     */
    public final TCalendarProduction T_CALENDAR_PRODUCTION = TCalendarProduction.T_CALENDAR_PRODUCTION;

    /**
     * Диапазоны стоимостных показателей
     */
    public final TCostRange T_COST_RANGE = TCostRange.T_COST_RANGE;

    /**
     * Системы-источники
     */
    public final TExternalSource T_EXTERNAL_SOURCE = TExternalSource.T_EXTERNAL_SOURCE;

    /**
     * FAQ: ответ на вопрос
     */
    public final TFaqAnswer T_FAQ_ANSWER = TFaqAnswer.T_FAQ_ANSWER;

    /**
     * FAQ: вопросы
     */
    public final TFaqQuestion T_FAQ_QUESTION = TFaqQuestion.T_FAQ_QUESTION;

    /**
     * Обратная связь
     */
    public final TFeedback T_FEEDBACK = TFeedback.T_FEEDBACK;

    /**
     * Справочник тем для обратной связи
     */
    public final TFeedbackThemes T_FEEDBACK_THEMES = TFeedbackThemes.T_FEEDBACK_THEMES;

    /**
     * Шаблон письма
     */
    public final TLetterTemplate T_LETTER_TEMPLATE = TLetterTemplate.T_LETTER_TEMPLATE;

    /**
     * Допустимый формат документа (Enum)
     */
    public final TLetterTemplateAcceptableDocumentFormatEnum T_LETTER_TEMPLATE_ACCEPTABLE_DOCUMENT_FORMAT_ENUM = TLetterTemplateAcceptableDocumentFormatEnum.T_LETTER_TEMPLATE_ACCEPTABLE_DOCUMENT_FORMAT_ENUM;

    /**
     * Вид шаблона (Enum)
     */
    public final TLetterTemplateTypeTemplateEnum T_LETTER_TEMPLATE_TYPE_TEMPLATE_ENUM = TLetterTemplateTypeTemplateEnum.T_LETTER_TEMPLATE_TYPE_TEMPLATE_ENUM;

    /**
     * Переменные к шаблону письма
     */
    public final TLetterTemplateVariable T_LETTER_TEMPLATE_VARIABLE = TLetterTemplateVariable.T_LETTER_TEMPLATE_VARIABLE;

    /**
     * Настройка матрицы Компания организатор / Организатор &lt;&gt; Заказчик /
     * Инициатор"
     */
    public final TMatrix T_MATRIX = TMatrix.T_MATRIX;

    /**
     * Преднастроенный вопрос
     */
    public final TQuestion T_QUESTION = TQuestion.T_QUESTION;

    /**
     * Вид шаблона КП для услуги
     */
    public final TServiceOfferType T_SERVICE_OFFER_TYPE = TServiceOfferType.T_SERVICE_OFFER_TYPE;

    /**
     * Переменная
     */
    public final TVariable T_VARIABLE = TVariable.T_VARIABLE;

    /**
     * No further instances allowed
     */
    private Admin() {
        super("admin", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        return Arrays.asList(
            Sequences.GLOBAL_ID_SEQ
        );
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            AParam.A_PARAM,
            TAnswerVersion.T_ANSWER_VERSION,
            TAppControl.T_APP_CONTROL,
            TCalendarProduction.T_CALENDAR_PRODUCTION,
            TCostRange.T_COST_RANGE,
            TExternalSource.T_EXTERNAL_SOURCE,
            TFaqAnswer.T_FAQ_ANSWER,
            TFaqQuestion.T_FAQ_QUESTION,
            TFeedback.T_FEEDBACK,
            TFeedbackThemes.T_FEEDBACK_THEMES,
            TLetterTemplate.T_LETTER_TEMPLATE,
            TLetterTemplateAcceptableDocumentFormatEnum.T_LETTER_TEMPLATE_ACCEPTABLE_DOCUMENT_FORMAT_ENUM,
            TLetterTemplateTypeTemplateEnum.T_LETTER_TEMPLATE_TYPE_TEMPLATE_ENUM,
            TLetterTemplateVariable.T_LETTER_TEMPLATE_VARIABLE,
            TMatrix.T_MATRIX,
            TQuestion.T_QUESTION,
            TServiceOfferType.T_SERVICE_OFFER_TYPE,
            TVariable.T_VARIABLE
        );
    }
}

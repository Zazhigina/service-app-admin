/*
 * This file is generated by jOOQ.
 */
package jooqdata.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * Вариант ответа на вопрос
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TAnswerVersion implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private Long questionId;
    private String name;
    private Integer orderNo;
    private LocalDateTime createDate;
    private String createUser;
    private LocalDateTime lastUpdateDate;
    private String lastUpdateUser;
    private Boolean isUsed;

    public TAnswerVersion() {}

    public TAnswerVersion(TAnswerVersion value) {
        this.id = value.id;
        this.questionId = value.questionId;
        this.name = value.name;
        this.orderNo = value.orderNo;
        this.createDate = value.createDate;
        this.createUser = value.createUser;
        this.lastUpdateDate = value.lastUpdateDate;
        this.lastUpdateUser = value.lastUpdateUser;
        this.isUsed = value.isUsed;
    }

    public TAnswerVersion(
        Long id,
        Long questionId,
        String name,
        Integer orderNo,
        LocalDateTime createDate,
        String createUser,
        LocalDateTime lastUpdateDate,
        String lastUpdateUser,
        Boolean isUsed
    ) {
        this.id = id;
        this.questionId = questionId;
        this.name = name;
        this.orderNo = orderNo;
        this.createDate = createDate;
        this.createUser = createUser;
        this.lastUpdateDate = lastUpdateDate;
        this.lastUpdateUser = lastUpdateUser;
        this.isUsed = isUsed;
    }

    /**
     * Getter for <code>admin.t_answer_version.id</code>. Первичный ключ
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>admin.t_answer_version.id</code>. Первичный ключ
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>admin.t_answer_version.question_id</code>.
     * Преднастроенный вопрос
     */
    public Long getQuestionId() {
        return this.questionId;
    }

    /**
     * Setter for <code>admin.t_answer_version.question_id</code>.
     * Преднастроенный вопрос
     */
    public void setQuestionId(Long questionId) {
        this.questionId = questionId;
    }

    /**
     * Getter for <code>admin.t_answer_version.name</code>. Наименование
     */
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>admin.t_answer_version.name</code>. Наименование
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for <code>admin.t_answer_version.order_no</code>. Номер варианта
     * ответа
     */
    public Integer getOrderNo() {
        return this.orderNo;
    }

    /**
     * Setter for <code>admin.t_answer_version.order_no</code>. Номер варианта
     * ответа
     */
    public void setOrderNo(Integer orderNo) {
        this.orderNo = orderNo;
    }

    /**
     * Getter for <code>admin.t_answer_version.create_date</code>. Дата и время
     * создания
     */
    public LocalDateTime getCreateDate() {
        return this.createDate;
    }

    /**
     * Setter for <code>admin.t_answer_version.create_date</code>. Дата и время
     * создания
     */
    public void setCreateDate(LocalDateTime createDate) {
        this.createDate = createDate;
    }

    /**
     * Getter for <code>admin.t_answer_version.create_user</code>. Автор
     * создания
     */
    public String getCreateUser() {
        return this.createUser;
    }

    /**
     * Setter for <code>admin.t_answer_version.create_user</code>. Автор
     * создания
     */
    public void setCreateUser(String createUser) {
        this.createUser = createUser;
    }

    /**
     * Getter for <code>admin.t_answer_version.last_update_date</code>. Дата и
     * время изменения
     */
    public LocalDateTime getLastUpdateDate() {
        return this.lastUpdateDate;
    }

    /**
     * Setter for <code>admin.t_answer_version.last_update_date</code>. Дата и
     * время изменения
     */
    public void setLastUpdateDate(LocalDateTime lastUpdateDate) {
        this.lastUpdateDate = lastUpdateDate;
    }

    /**
     * Getter for <code>admin.t_answer_version.last_update_user</code>. Автор
     * изменения
     */
    public String getLastUpdateUser() {
        return this.lastUpdateUser;
    }

    /**
     * Setter for <code>admin.t_answer_version.last_update_user</code>. Автор
     * изменения
     */
    public void setLastUpdateUser(String lastUpdateUser) {
        this.lastUpdateUser = lastUpdateUser;
    }

    /**
     * Getter for <code>admin.t_answer_version.is_used</code>. Индикатор выбора
     * ответа
     */
    public Boolean getIsUsed() {
        return this.isUsed;
    }

    /**
     * Setter for <code>admin.t_answer_version.is_used</code>. Индикатор выбора
     * ответа
     */
    public void setIsUsed(Boolean isUsed) {
        this.isUsed = isUsed;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final TAnswerVersion other = (TAnswerVersion) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.questionId == null) {
            if (other.questionId != null)
                return false;
        }
        else if (!this.questionId.equals(other.questionId))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.orderNo == null) {
            if (other.orderNo != null)
                return false;
        }
        else if (!this.orderNo.equals(other.orderNo))
            return false;
        if (this.createDate == null) {
            if (other.createDate != null)
                return false;
        }
        else if (!this.createDate.equals(other.createDate))
            return false;
        if (this.createUser == null) {
            if (other.createUser != null)
                return false;
        }
        else if (!this.createUser.equals(other.createUser))
            return false;
        if (this.lastUpdateDate == null) {
            if (other.lastUpdateDate != null)
                return false;
        }
        else if (!this.lastUpdateDate.equals(other.lastUpdateDate))
            return false;
        if (this.lastUpdateUser == null) {
            if (other.lastUpdateUser != null)
                return false;
        }
        else if (!this.lastUpdateUser.equals(other.lastUpdateUser))
            return false;
        if (this.isUsed == null) {
            if (other.isUsed != null)
                return false;
        }
        else if (!this.isUsed.equals(other.isUsed))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.questionId == null) ? 0 : this.questionId.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.orderNo == null) ? 0 : this.orderNo.hashCode());
        result = prime * result + ((this.createDate == null) ? 0 : this.createDate.hashCode());
        result = prime * result + ((this.createUser == null) ? 0 : this.createUser.hashCode());
        result = prime * result + ((this.lastUpdateDate == null) ? 0 : this.lastUpdateDate.hashCode());
        result = prime * result + ((this.lastUpdateUser == null) ? 0 : this.lastUpdateUser.hashCode());
        result = prime * result + ((this.isUsed == null) ? 0 : this.isUsed.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("TAnswerVersion (");

        sb.append(id);
        sb.append(", ").append(questionId);
        sb.append(", ").append(name);
        sb.append(", ").append(orderNo);
        sb.append(", ").append(createDate);
        sb.append(", ").append(createUser);
        sb.append(", ").append(lastUpdateDate);
        sb.append(", ").append(lastUpdateUser);
        sb.append(", ").append(isUsed);

        sb.append(")");
        return sb.toString();
    }
}

/*
 * This file is generated by jOOQ.
 */
package jooqdata.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;


/**
 * Производственный календарь
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TCalendarProduction implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private Integer year;
    private BigDecimal hourWorkCount;
    private BigDecimal monthWorkHourCount;
    private LocalDateTime createDate;
    private String createUser;
    private LocalDateTime lastUpdateDate;
    private String lastUpdateUser;

    public TCalendarProduction() {}

    public TCalendarProduction(TCalendarProduction value) {
        this.id = value.id;
        this.year = value.year;
        this.hourWorkCount = value.hourWorkCount;
        this.monthWorkHourCount = value.monthWorkHourCount;
        this.createDate = value.createDate;
        this.createUser = value.createUser;
        this.lastUpdateDate = value.lastUpdateDate;
        this.lastUpdateUser = value.lastUpdateUser;
    }

    public TCalendarProduction(
        Long id,
        Integer year,
        BigDecimal hourWorkCount,
        BigDecimal monthWorkHourCount,
        LocalDateTime createDate,
        String createUser,
        LocalDateTime lastUpdateDate,
        String lastUpdateUser
    ) {
        this.id = id;
        this.year = year;
        this.hourWorkCount = hourWorkCount;
        this.monthWorkHourCount = monthWorkHourCount;
        this.createDate = createDate;
        this.createUser = createUser;
        this.lastUpdateDate = lastUpdateDate;
        this.lastUpdateUser = lastUpdateUser;
    }

    /**
     * Getter for <code>admin.t_calendar_production.id</code>. Первичный ключ
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>admin.t_calendar_production.id</code>. Первичный ключ
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>admin.t_calendar_production.year</code>. Год
     */
    public Integer getYear() {
        return this.year;
    }

    /**
     * Setter for <code>admin.t_calendar_production.year</code>. Год
     */
    public void setYear(Integer year) {
        this.year = year;
    }

    /**
     * Getter for <code>admin.t_calendar_production.hour_work_count</code>.
     * Рабочее время (в часах)
     */
    public BigDecimal getHourWorkCount() {
        return this.hourWorkCount;
    }

    /**
     * Setter for <code>admin.t_calendar_production.hour_work_count</code>.
     * Рабочее время (в часах)
     */
    public void setHourWorkCount(BigDecimal hourWorkCount) {
        this.hourWorkCount = hourWorkCount;
    }

    /**
     * Getter for
     * <code>admin.t_calendar_production.month_work_hour_count</code>.
     * Количество часов работы в месяц
     */
    public BigDecimal getMonthWorkHourCount() {
        return this.monthWorkHourCount;
    }

    /**
     * Setter for
     * <code>admin.t_calendar_production.month_work_hour_count</code>.
     * Количество часов работы в месяц
     */
    public void setMonthWorkHourCount(BigDecimal monthWorkHourCount) {
        this.monthWorkHourCount = monthWorkHourCount;
    }

    /**
     * Getter for <code>admin.t_calendar_production.create_date</code>. Дата
     * создания
     */
    public LocalDateTime getCreateDate() {
        return this.createDate;
    }

    /**
     * Setter for <code>admin.t_calendar_production.create_date</code>. Дата
     * создания
     */
    public void setCreateDate(LocalDateTime createDate) {
        this.createDate = createDate;
    }

    /**
     * Getter for <code>admin.t_calendar_production.create_user</code>. Автор
     * создания
     */
    public String getCreateUser() {
        return this.createUser;
    }

    /**
     * Setter for <code>admin.t_calendar_production.create_user</code>. Автор
     * создания
     */
    public void setCreateUser(String createUser) {
        this.createUser = createUser;
    }

    /**
     * Getter for <code>admin.t_calendar_production.last_update_date</code>.
     * Дата и время изменения
     */
    public LocalDateTime getLastUpdateDate() {
        return this.lastUpdateDate;
    }

    /**
     * Setter for <code>admin.t_calendar_production.last_update_date</code>.
     * Дата и время изменения
     */
    public void setLastUpdateDate(LocalDateTime lastUpdateDate) {
        this.lastUpdateDate = lastUpdateDate;
    }

    /**
     * Getter for <code>admin.t_calendar_production.last_update_user</code>.
     * Автор изменения
     */
    public String getLastUpdateUser() {
        return this.lastUpdateUser;
    }

    /**
     * Setter for <code>admin.t_calendar_production.last_update_user</code>.
     * Автор изменения
     */
    public void setLastUpdateUser(String lastUpdateUser) {
        this.lastUpdateUser = lastUpdateUser;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final TCalendarProduction other = (TCalendarProduction) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.year == null) {
            if (other.year != null)
                return false;
        }
        else if (!this.year.equals(other.year))
            return false;
        if (this.hourWorkCount == null) {
            if (other.hourWorkCount != null)
                return false;
        }
        else if (!this.hourWorkCount.equals(other.hourWorkCount))
            return false;
        if (this.monthWorkHourCount == null) {
            if (other.monthWorkHourCount != null)
                return false;
        }
        else if (!this.monthWorkHourCount.equals(other.monthWorkHourCount))
            return false;
        if (this.createDate == null) {
            if (other.createDate != null)
                return false;
        }
        else if (!this.createDate.equals(other.createDate))
            return false;
        if (this.createUser == null) {
            if (other.createUser != null)
                return false;
        }
        else if (!this.createUser.equals(other.createUser))
            return false;
        if (this.lastUpdateDate == null) {
            if (other.lastUpdateDate != null)
                return false;
        }
        else if (!this.lastUpdateDate.equals(other.lastUpdateDate))
            return false;
        if (this.lastUpdateUser == null) {
            if (other.lastUpdateUser != null)
                return false;
        }
        else if (!this.lastUpdateUser.equals(other.lastUpdateUser))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.year == null) ? 0 : this.year.hashCode());
        result = prime * result + ((this.hourWorkCount == null) ? 0 : this.hourWorkCount.hashCode());
        result = prime * result + ((this.monthWorkHourCount == null) ? 0 : this.monthWorkHourCount.hashCode());
        result = prime * result + ((this.createDate == null) ? 0 : this.createDate.hashCode());
        result = prime * result + ((this.createUser == null) ? 0 : this.createUser.hashCode());
        result = prime * result + ((this.lastUpdateDate == null) ? 0 : this.lastUpdateDate.hashCode());
        result = prime * result + ((this.lastUpdateUser == null) ? 0 : this.lastUpdateUser.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("TCalendarProduction (");

        sb.append(id);
        sb.append(", ").append(year);
        sb.append(", ").append(hourWorkCount);
        sb.append(", ").append(monthWorkHourCount);
        sb.append(", ").append(createDate);
        sb.append(", ").append(createUser);
        sb.append(", ").append(lastUpdateDate);
        sb.append(", ").append(lastUpdateUser);

        sb.append(")");
        return sb.toString();
    }
}

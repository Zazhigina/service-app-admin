/*
 * This file is generated by jOOQ.
 */
package jooqdata.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * Шаблон письма
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TLetterTemplate implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private String letterType;
    private String letterTitle;
    private String letterSample;
    private LocalDateTime createDate;
    private String createUser;
    private LocalDateTime lastUpdateDate;
    private String lastUpdateUser;

    public TLetterTemplate() {}

    public TLetterTemplate(TLetterTemplate value) {
        this.id = value.id;
        this.letterType = value.letterType;
        this.letterTitle = value.letterTitle;
        this.letterSample = value.letterSample;
        this.createDate = value.createDate;
        this.createUser = value.createUser;
        this.lastUpdateDate = value.lastUpdateDate;
        this.lastUpdateUser = value.lastUpdateUser;
    }

    public TLetterTemplate(
        Long id,
        String letterType,
        String letterTitle,
        String letterSample,
        LocalDateTime createDate,
        String createUser,
        LocalDateTime lastUpdateDate,
        String lastUpdateUser
    ) {
        this.id = id;
        this.letterType = letterType;
        this.letterTitle = letterTitle;
        this.letterSample = letterSample;
        this.createDate = createDate;
        this.createUser = createUser;
        this.lastUpdateDate = lastUpdateDate;
        this.lastUpdateUser = lastUpdateUser;
    }

    /**
     * Getter for <code>admin.t_letter_template.id</code>. ID
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>admin.t_letter_template.id</code>. ID
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>admin.t_letter_template.letter_type</code>. Параметр имя
     */
    public String getLetterType() {
        return this.letterType;
    }

    /**
     * Setter for <code>admin.t_letter_template.letter_type</code>. Параметр имя
     */
    public void setLetterType(String letterType) {
        this.letterType = letterType;
    }

    /**
     * Getter for <code>admin.t_letter_template.letter_title</code>. Заголовок
     * письма
     */
    public String getLetterTitle() {
        return this.letterTitle;
    }

    /**
     * Setter for <code>admin.t_letter_template.letter_title</code>. Заголовок
     * письма
     */
    public void setLetterTitle(String letterTitle) {
        this.letterTitle = letterTitle;
    }

    /**
     * Getter for <code>admin.t_letter_template.letter_sample</code>. Документ
     */
    public String getLetterSample() {
        return this.letterSample;
    }

    /**
     * Setter for <code>admin.t_letter_template.letter_sample</code>. Документ
     */
    public void setLetterSample(String letterSample) {
        this.letterSample = letterSample;
    }

    /**
     * Getter for <code>admin.t_letter_template.create_date</code>. Дата и время
     * создания
     */
    public LocalDateTime getCreateDate() {
        return this.createDate;
    }

    /**
     * Setter for <code>admin.t_letter_template.create_date</code>. Дата и время
     * создания
     */
    public void setCreateDate(LocalDateTime createDate) {
        this.createDate = createDate;
    }

    /**
     * Getter for <code>admin.t_letter_template.create_user</code>. Автор
     * создания
     */
    public String getCreateUser() {
        return this.createUser;
    }

    /**
     * Setter for <code>admin.t_letter_template.create_user</code>. Автор
     * создания
     */
    public void setCreateUser(String createUser) {
        this.createUser = createUser;
    }

    /**
     * Getter for <code>admin.t_letter_template.last_update_date</code>. Дата и
     * время изменения
     */
    public LocalDateTime getLastUpdateDate() {
        return this.lastUpdateDate;
    }

    /**
     * Setter for <code>admin.t_letter_template.last_update_date</code>. Дата и
     * время изменения
     */
    public void setLastUpdateDate(LocalDateTime lastUpdateDate) {
        this.lastUpdateDate = lastUpdateDate;
    }

    /**
     * Getter for <code>admin.t_letter_template.last_update_user</code>. Автор
     * изменения
     */
    public String getLastUpdateUser() {
        return this.lastUpdateUser;
    }

    /**
     * Setter for <code>admin.t_letter_template.last_update_user</code>. Автор
     * изменения
     */
    public void setLastUpdateUser(String lastUpdateUser) {
        this.lastUpdateUser = lastUpdateUser;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final TLetterTemplate other = (TLetterTemplate) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.letterType == null) {
            if (other.letterType != null)
                return false;
        }
        else if (!this.letterType.equals(other.letterType))
            return false;
        if (this.letterTitle == null) {
            if (other.letterTitle != null)
                return false;
        }
        else if (!this.letterTitle.equals(other.letterTitle))
            return false;
        if (this.letterSample == null) {
            if (other.letterSample != null)
                return false;
        }
        else if (!this.letterSample.equals(other.letterSample))
            return false;
        if (this.createDate == null) {
            if (other.createDate != null)
                return false;
        }
        else if (!this.createDate.equals(other.createDate))
            return false;
        if (this.createUser == null) {
            if (other.createUser != null)
                return false;
        }
        else if (!this.createUser.equals(other.createUser))
            return false;
        if (this.lastUpdateDate == null) {
            if (other.lastUpdateDate != null)
                return false;
        }
        else if (!this.lastUpdateDate.equals(other.lastUpdateDate))
            return false;
        if (this.lastUpdateUser == null) {
            if (other.lastUpdateUser != null)
                return false;
        }
        else if (!this.lastUpdateUser.equals(other.lastUpdateUser))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.letterType == null) ? 0 : this.letterType.hashCode());
        result = prime * result + ((this.letterTitle == null) ? 0 : this.letterTitle.hashCode());
        result = prime * result + ((this.letterSample == null) ? 0 : this.letterSample.hashCode());
        result = prime * result + ((this.createDate == null) ? 0 : this.createDate.hashCode());
        result = prime * result + ((this.createUser == null) ? 0 : this.createUser.hashCode());
        result = prime * result + ((this.lastUpdateDate == null) ? 0 : this.lastUpdateDate.hashCode());
        result = prime * result + ((this.lastUpdateUser == null) ? 0 : this.lastUpdateUser.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("TLetterTemplate (");

        sb.append(id);
        sb.append(", ").append(letterType);
        sb.append(", ").append(letterTitle);
        sb.append(", ").append(letterSample);
        sb.append(", ").append(createDate);
        sb.append(", ").append(createUser);
        sb.append(", ").append(lastUpdateDate);
        sb.append(", ").append(lastUpdateUser);

        sb.append(")");
        return sb.toString();
    }
}

/*
 * This file is generated by jOOQ.
 */
package jooqdata.tables.records;


import java.time.LocalDateTime;

import jooqdata.tables.TAnswerVersion;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Вариант ответа на вопрос
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TAnswerVersionRecord extends UpdatableRecordImpl<TAnswerVersionRecord> implements Record9<Long, Long, String, Integer, LocalDateTime, String, LocalDateTime, String, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>admin.t_answer_version.id</code>. Первичный ключ
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>admin.t_answer_version.id</code>. Первичный ключ
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>admin.t_answer_version.question_id</code>.
     * Преднастроенный вопрос
     */
    public void setQuestionId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>admin.t_answer_version.question_id</code>.
     * Преднастроенный вопрос
     */
    public Long getQuestionId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>admin.t_answer_version.name</code>. Наименование
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>admin.t_answer_version.name</code>. Наименование
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>admin.t_answer_version.order_no</code>. Номер варианта
     * ответа
     */
    public void setOrderNo(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>admin.t_answer_version.order_no</code>. Номер варианта
     * ответа
     */
    public Integer getOrderNo() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>admin.t_answer_version.create_date</code>. Дата и время
     * создания
     */
    public void setCreateDate(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>admin.t_answer_version.create_date</code>. Дата и время
     * создания
     */
    public LocalDateTime getCreateDate() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>admin.t_answer_version.create_user</code>. Автор
     * создания
     */
    public void setCreateUser(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>admin.t_answer_version.create_user</code>. Автор
     * создания
     */
    public String getCreateUser() {
        return (String) get(5);
    }

    /**
     * Setter for <code>admin.t_answer_version.last_update_date</code>. Дата и
     * время изменения
     */
    public void setLastUpdateDate(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>admin.t_answer_version.last_update_date</code>. Дата и
     * время изменения
     */
    public LocalDateTime getLastUpdateDate() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>admin.t_answer_version.last_update_user</code>. Автор
     * изменения
     */
    public void setLastUpdateUser(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>admin.t_answer_version.last_update_user</code>. Автор
     * изменения
     */
    public String getLastUpdateUser() {
        return (String) get(7);
    }

    /**
     * Setter for <code>admin.t_answer_version.is_used</code>. Индикатор выбора
     * ответа
     */
    public void setIsUsed(Boolean value) {
        set(8, value);
    }

    /**
     * Getter for <code>admin.t_answer_version.is_used</code>. Индикатор выбора
     * ответа
     */
    public Boolean getIsUsed() {
        return (Boolean) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, Long, String, Integer, LocalDateTime, String, LocalDateTime, String, Boolean> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Long, Long, String, Integer, LocalDateTime, String, LocalDateTime, String, Boolean> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return TAnswerVersion.T_ANSWER_VERSION.ID;
    }

    @Override
    public Field<Long> field2() {
        return TAnswerVersion.T_ANSWER_VERSION.QUESTION_ID;
    }

    @Override
    public Field<String> field3() {
        return TAnswerVersion.T_ANSWER_VERSION.NAME;
    }

    @Override
    public Field<Integer> field4() {
        return TAnswerVersion.T_ANSWER_VERSION.ORDER_NO;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return TAnswerVersion.T_ANSWER_VERSION.CREATE_DATE;
    }

    @Override
    public Field<String> field6() {
        return TAnswerVersion.T_ANSWER_VERSION.CREATE_USER;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return TAnswerVersion.T_ANSWER_VERSION.LAST_UPDATE_DATE;
    }

    @Override
    public Field<String> field8() {
        return TAnswerVersion.T_ANSWER_VERSION.LAST_UPDATE_USER;
    }

    @Override
    public Field<Boolean> field9() {
        return TAnswerVersion.T_ANSWER_VERSION.IS_USED;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getQuestionId();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public Integer component4() {
        return getOrderNo();
    }

    @Override
    public LocalDateTime component5() {
        return getCreateDate();
    }

    @Override
    public String component6() {
        return getCreateUser();
    }

    @Override
    public LocalDateTime component7() {
        return getLastUpdateDate();
    }

    @Override
    public String component8() {
        return getLastUpdateUser();
    }

    @Override
    public Boolean component9() {
        return getIsUsed();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getQuestionId();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public Integer value4() {
        return getOrderNo();
    }

    @Override
    public LocalDateTime value5() {
        return getCreateDate();
    }

    @Override
    public String value6() {
        return getCreateUser();
    }

    @Override
    public LocalDateTime value7() {
        return getLastUpdateDate();
    }

    @Override
    public String value8() {
        return getLastUpdateUser();
    }

    @Override
    public Boolean value9() {
        return getIsUsed();
    }

    @Override
    public TAnswerVersionRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public TAnswerVersionRecord value2(Long value) {
        setQuestionId(value);
        return this;
    }

    @Override
    public TAnswerVersionRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public TAnswerVersionRecord value4(Integer value) {
        setOrderNo(value);
        return this;
    }

    @Override
    public TAnswerVersionRecord value5(LocalDateTime value) {
        setCreateDate(value);
        return this;
    }

    @Override
    public TAnswerVersionRecord value6(String value) {
        setCreateUser(value);
        return this;
    }

    @Override
    public TAnswerVersionRecord value7(LocalDateTime value) {
        setLastUpdateDate(value);
        return this;
    }

    @Override
    public TAnswerVersionRecord value8(String value) {
        setLastUpdateUser(value);
        return this;
    }

    @Override
    public TAnswerVersionRecord value9(Boolean value) {
        setIsUsed(value);
        return this;
    }

    @Override
    public TAnswerVersionRecord values(Long value1, Long value2, String value3, Integer value4, LocalDateTime value5, String value6, LocalDateTime value7, String value8, Boolean value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TAnswerVersionRecord
     */
    public TAnswerVersionRecord() {
        super(TAnswerVersion.T_ANSWER_VERSION);
    }

    /**
     * Create a detached, initialised TAnswerVersionRecord
     */
    public TAnswerVersionRecord(Long id, Long questionId, String name, Integer orderNo, LocalDateTime createDate, String createUser, LocalDateTime lastUpdateDate, String lastUpdateUser, Boolean isUsed) {
        super(TAnswerVersion.T_ANSWER_VERSION);

        setId(id);
        setQuestionId(questionId);
        setName(name);
        setOrderNo(orderNo);
        setCreateDate(createDate);
        setCreateUser(createUser);
        setLastUpdateDate(lastUpdateDate);
        setLastUpdateUser(lastUpdateUser);
        setIsUsed(isUsed);
    }

    /**
     * Create a detached, initialised TAnswerVersionRecord
     */
    public TAnswerVersionRecord(jooqdata.tables.pojos.TAnswerVersion value) {
        super(TAnswerVersion.T_ANSWER_VERSION);

        if (value != null) {
            setId(value.getId());
            setQuestionId(value.getQuestionId());
            setName(value.getName());
            setOrderNo(value.getOrderNo());
            setCreateDate(value.getCreateDate());
            setCreateUser(value.getCreateUser());
            setLastUpdateDate(value.getLastUpdateDate());
            setLastUpdateUser(value.getLastUpdateUser());
            setIsUsed(value.getIsUsed());
        }
    }
}

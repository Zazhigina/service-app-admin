/*
 * This file is generated by jOOQ.
 */
package jooqdata.tables.records;


import java.time.LocalDate;
import java.time.LocalDateTime;

import jooqdata.tables.TCalendarDay;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Календарь рабочих и выходных дней (исключения)
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TCalendarDayRecord extends UpdatableRecordImpl<TCalendarDayRecord> implements Record7<Long, LocalDate, Boolean, LocalDateTime, String, LocalDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>admin.t_calendar_day.id</code>. Идентификатор
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>admin.t_calendar_day.id</code>. Идентификатор
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>admin.t_calendar_day.date</code>. Дата
     */
    public void setDate(LocalDate value) {
        set(1, value);
    }

    /**
     * Getter for <code>admin.t_calendar_day.date</code>. Дата
     */
    public LocalDate getDate() {
        return (LocalDate) get(1);
    }

    /**
     * Setter for <code>admin.t_calendar_day.working</code>. Рабочий день?
     */
    public void setWorking(Boolean value) {
        set(2, value);
    }

    /**
     * Getter for <code>admin.t_calendar_day.working</code>. Рабочий день?
     */
    public Boolean getWorking() {
        return (Boolean) get(2);
    }

    /**
     * Setter for <code>admin.t_calendar_day.create_date</code>. Дата создания
     */
    public void setCreateDate(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>admin.t_calendar_day.create_date</code>. Дата создания
     */
    public LocalDateTime getCreateDate() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>admin.t_calendar_day.create_user</code>. Автор создания
     */
    public void setCreateUser(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>admin.t_calendar_day.create_user</code>. Автор создания
     */
    public String getCreateUser() {
        return (String) get(4);
    }

    /**
     * Setter for <code>admin.t_calendar_day.last_update_date</code>. Дата и
     * время изменения
     */
    public void setLastUpdateDate(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>admin.t_calendar_day.last_update_date</code>. Дата и
     * время изменения
     */
    public LocalDateTime getLastUpdateDate() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>admin.t_calendar_day.last_update_user</code>. Автор
     * изменения
     */
    public void setLastUpdateUser(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>admin.t_calendar_day.last_update_user</code>. Автор
     * изменения
     */
    public String getLastUpdateUser() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, LocalDate, Boolean, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, LocalDate, Boolean, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return TCalendarDay.T_CALENDAR_DAY.ID;
    }

    @Override
    public Field<LocalDate> field2() {
        return TCalendarDay.T_CALENDAR_DAY.DATE;
    }

    @Override
    public Field<Boolean> field3() {
        return TCalendarDay.T_CALENDAR_DAY.WORKING;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return TCalendarDay.T_CALENDAR_DAY.CREATE_DATE;
    }

    @Override
    public Field<String> field5() {
        return TCalendarDay.T_CALENDAR_DAY.CREATE_USER;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return TCalendarDay.T_CALENDAR_DAY.LAST_UPDATE_DATE;
    }

    @Override
    public Field<String> field7() {
        return TCalendarDay.T_CALENDAR_DAY.LAST_UPDATE_USER;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public LocalDate component2() {
        return getDate();
    }

    @Override
    public Boolean component3() {
        return getWorking();
    }

    @Override
    public LocalDateTime component4() {
        return getCreateDate();
    }

    @Override
    public String component5() {
        return getCreateUser();
    }

    @Override
    public LocalDateTime component6() {
        return getLastUpdateDate();
    }

    @Override
    public String component7() {
        return getLastUpdateUser();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public LocalDate value2() {
        return getDate();
    }

    @Override
    public Boolean value3() {
        return getWorking();
    }

    @Override
    public LocalDateTime value4() {
        return getCreateDate();
    }

    @Override
    public String value5() {
        return getCreateUser();
    }

    @Override
    public LocalDateTime value6() {
        return getLastUpdateDate();
    }

    @Override
    public String value7() {
        return getLastUpdateUser();
    }

    @Override
    public TCalendarDayRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public TCalendarDayRecord value2(LocalDate value) {
        setDate(value);
        return this;
    }

    @Override
    public TCalendarDayRecord value3(Boolean value) {
        setWorking(value);
        return this;
    }

    @Override
    public TCalendarDayRecord value4(LocalDateTime value) {
        setCreateDate(value);
        return this;
    }

    @Override
    public TCalendarDayRecord value5(String value) {
        setCreateUser(value);
        return this;
    }

    @Override
    public TCalendarDayRecord value6(LocalDateTime value) {
        setLastUpdateDate(value);
        return this;
    }

    @Override
    public TCalendarDayRecord value7(String value) {
        setLastUpdateUser(value);
        return this;
    }

    @Override
    public TCalendarDayRecord values(Long value1, LocalDate value2, Boolean value3, LocalDateTime value4, String value5, LocalDateTime value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TCalendarDayRecord
     */
    public TCalendarDayRecord() {
        super(TCalendarDay.T_CALENDAR_DAY);
    }

    /**
     * Create a detached, initialised TCalendarDayRecord
     */
    public TCalendarDayRecord(Long id, LocalDate date, Boolean working, LocalDateTime createDate, String createUser, LocalDateTime lastUpdateDate, String lastUpdateUser) {
        super(TCalendarDay.T_CALENDAR_DAY);

        setId(id);
        setDate(date);
        setWorking(working);
        setCreateDate(createDate);
        setCreateUser(createUser);
        setLastUpdateDate(lastUpdateDate);
        setLastUpdateUser(lastUpdateUser);
    }
}

/*
 * This file is generated by jOOQ.
 */
package jooqdata.tables.records;


import java.math.BigDecimal;
import java.time.LocalDateTime;

import jooqdata.tables.TCalendarProduction;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Производственный календарь
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TCalendarProductionRecord extends UpdatableRecordImpl<TCalendarProductionRecord> implements Record8<Long, Integer, BigDecimal, BigDecimal, LocalDateTime, String, LocalDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>admin.t_calendar_production.id</code>. Первичный ключ
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>admin.t_calendar_production.id</code>. Первичный ключ
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>admin.t_calendar_production.year</code>. Год
     */
    public void setYear(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>admin.t_calendar_production.year</code>. Год
     */
    public Integer getYear() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>admin.t_calendar_production.hour_work_count</code>.
     * Рабочее время (в часах)
     */
    public void setHourWorkCount(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>admin.t_calendar_production.hour_work_count</code>.
     * Рабочее время (в часах)
     */
    public BigDecimal getHourWorkCount() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for
     * <code>admin.t_calendar_production.month_work_hour_count</code>.
     * Количество часов работы в месяц
     */
    public void setMonthWorkHourCount(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>admin.t_calendar_production.month_work_hour_count</code>.
     * Количество часов работы в месяц
     */
    public BigDecimal getMonthWorkHourCount() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>admin.t_calendar_production.create_date</code>. Дата
     * создания
     */
    public void setCreateDate(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>admin.t_calendar_production.create_date</code>. Дата
     * создания
     */
    public LocalDateTime getCreateDate() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>admin.t_calendar_production.create_user</code>. Автор
     * создания
     */
    public void setCreateUser(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>admin.t_calendar_production.create_user</code>. Автор
     * создания
     */
    public String getCreateUser() {
        return (String) get(5);
    }

    /**
     * Setter for <code>admin.t_calendar_production.last_update_date</code>.
     * Дата и время изменения
     */
    public void setLastUpdateDate(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>admin.t_calendar_production.last_update_date</code>.
     * Дата и время изменения
     */
    public LocalDateTime getLastUpdateDate() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>admin.t_calendar_production.last_update_user</code>.
     * Автор изменения
     */
    public void setLastUpdateUser(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>admin.t_calendar_production.last_update_user</code>.
     * Автор изменения
     */
    public String getLastUpdateUser() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, Integer, BigDecimal, BigDecimal, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, Integer, BigDecimal, BigDecimal, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return TCalendarProduction.T_CALENDAR_PRODUCTION.ID;
    }

    @Override
    public Field<Integer> field2() {
        return TCalendarProduction.T_CALENDAR_PRODUCTION.YEAR;
    }

    @Override
    public Field<BigDecimal> field3() {
        return TCalendarProduction.T_CALENDAR_PRODUCTION.HOUR_WORK_COUNT;
    }

    @Override
    public Field<BigDecimal> field4() {
        return TCalendarProduction.T_CALENDAR_PRODUCTION.MONTH_WORK_HOUR_COUNT;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return TCalendarProduction.T_CALENDAR_PRODUCTION.CREATE_DATE;
    }

    @Override
    public Field<String> field6() {
        return TCalendarProduction.T_CALENDAR_PRODUCTION.CREATE_USER;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return TCalendarProduction.T_CALENDAR_PRODUCTION.LAST_UPDATE_DATE;
    }

    @Override
    public Field<String> field8() {
        return TCalendarProduction.T_CALENDAR_PRODUCTION.LAST_UPDATE_USER;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getYear();
    }

    @Override
    public BigDecimal component3() {
        return getHourWorkCount();
    }

    @Override
    public BigDecimal component4() {
        return getMonthWorkHourCount();
    }

    @Override
    public LocalDateTime component5() {
        return getCreateDate();
    }

    @Override
    public String component6() {
        return getCreateUser();
    }

    @Override
    public LocalDateTime component7() {
        return getLastUpdateDate();
    }

    @Override
    public String component8() {
        return getLastUpdateUser();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getYear();
    }

    @Override
    public BigDecimal value3() {
        return getHourWorkCount();
    }

    @Override
    public BigDecimal value4() {
        return getMonthWorkHourCount();
    }

    @Override
    public LocalDateTime value5() {
        return getCreateDate();
    }

    @Override
    public String value6() {
        return getCreateUser();
    }

    @Override
    public LocalDateTime value7() {
        return getLastUpdateDate();
    }

    @Override
    public String value8() {
        return getLastUpdateUser();
    }

    @Override
    public TCalendarProductionRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public TCalendarProductionRecord value2(Integer value) {
        setYear(value);
        return this;
    }

    @Override
    public TCalendarProductionRecord value3(BigDecimal value) {
        setHourWorkCount(value);
        return this;
    }

    @Override
    public TCalendarProductionRecord value4(BigDecimal value) {
        setMonthWorkHourCount(value);
        return this;
    }

    @Override
    public TCalendarProductionRecord value5(LocalDateTime value) {
        setCreateDate(value);
        return this;
    }

    @Override
    public TCalendarProductionRecord value6(String value) {
        setCreateUser(value);
        return this;
    }

    @Override
    public TCalendarProductionRecord value7(LocalDateTime value) {
        setLastUpdateDate(value);
        return this;
    }

    @Override
    public TCalendarProductionRecord value8(String value) {
        setLastUpdateUser(value);
        return this;
    }

    @Override
    public TCalendarProductionRecord values(Long value1, Integer value2, BigDecimal value3, BigDecimal value4, LocalDateTime value5, String value6, LocalDateTime value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TCalendarProductionRecord
     */
    public TCalendarProductionRecord() {
        super(TCalendarProduction.T_CALENDAR_PRODUCTION);
    }

    /**
     * Create a detached, initialised TCalendarProductionRecord
     */
    public TCalendarProductionRecord(Long id, Integer year, BigDecimal hourWorkCount, BigDecimal monthWorkHourCount, LocalDateTime createDate, String createUser, LocalDateTime lastUpdateDate, String lastUpdateUser) {
        super(TCalendarProduction.T_CALENDAR_PRODUCTION);

        setId(id);
        setYear(year);
        setHourWorkCount(hourWorkCount);
        setMonthWorkHourCount(monthWorkHourCount);
        setCreateDate(createDate);
        setCreateUser(createUser);
        setLastUpdateDate(lastUpdateDate);
        setLastUpdateUser(lastUpdateUser);
    }

    /**
     * Create a detached, initialised TCalendarProductionRecord
     */
    public TCalendarProductionRecord(jooqdata.tables.pojos.TCalendarProduction value) {
        super(TCalendarProduction.T_CALENDAR_PRODUCTION);

        if (value != null) {
            setId(value.getId());
            setYear(value.getYear());
            setHourWorkCount(value.getHourWorkCount());
            setMonthWorkHourCount(value.getMonthWorkHourCount());
            setCreateDate(value.getCreateDate());
            setCreateUser(value.getCreateUser());
            setLastUpdateDate(value.getLastUpdateDate());
            setLastUpdateUser(value.getLastUpdateUser());
        }
    }
}

/*
 * This file is generated by jOOQ.
 */
package jooqdata.tables.records;


import java.math.BigDecimal;
import java.time.LocalDateTime;

import jooqdata.tables.TCostRange;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Диапазоны стоимостных показателей
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TCostRangeRecord extends UpdatableRecordImpl<TCostRangeRecord> implements Record9<Long, BigDecimal, BigDecimal, BigDecimal, String, LocalDateTime, String, LocalDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>admin.t_cost_range.id</code>. ID
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>admin.t_cost_range.id</code>. ID
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>admin.t_cost_range.lower_bound</code>. Нижняя граница
     */
    public void setLowerBound(BigDecimal value) {
        set(1, value);
    }

    /**
     * Getter for <code>admin.t_cost_range.lower_bound</code>. Нижняя граница
     */
    public BigDecimal getLowerBound() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for <code>admin.t_cost_range.upper_bound</code>. Верхняя граница
     */
    public void setUpperBound(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>admin.t_cost_range.upper_bound</code>. Верхняя граница
     */
    public BigDecimal getUpperBound() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>admin.t_cost_range.interval_step</code>. Шаг Интервала 
     */
    public void setIntervalStep(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>admin.t_cost_range.interval_step</code>. Шаг Интервала 
     */
    public BigDecimal getIntervalStep() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>admin.t_cost_range.range_text</code>. Текст диапазона
     */
    public void setRangeText(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>admin.t_cost_range.range_text</code>. Текст диапазона
     */
    public String getRangeText() {
        return (String) get(4);
    }

    /**
     * Setter for <code>admin.t_cost_range.create_date</code>. Дата и время
     * создания
     */
    public void setCreateDate(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>admin.t_cost_range.create_date</code>. Дата и время
     * создания
     */
    public LocalDateTime getCreateDate() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>admin.t_cost_range.create_user</code>. Автор создания
     */
    public void setCreateUser(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>admin.t_cost_range.create_user</code>. Автор создания
     */
    public String getCreateUser() {
        return (String) get(6);
    }

    /**
     * Setter for <code>admin.t_cost_range.last_update_date</code>. Дата и время
     * изменения
     */
    public void setLastUpdateDate(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>admin.t_cost_range.last_update_date</code>. Дата и время
     * изменения
     */
    public LocalDateTime getLastUpdateDate() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>admin.t_cost_range.last_update_user</code>. Автор
     * изменения
     */
    public void setLastUpdateUser(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>admin.t_cost_range.last_update_user</code>. Автор
     * изменения
     */
    public String getLastUpdateUser() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, BigDecimal, BigDecimal, BigDecimal, String, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Long, BigDecimal, BigDecimal, BigDecimal, String, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return TCostRange.T_COST_RANGE.ID;
    }

    @Override
    public Field<BigDecimal> field2() {
        return TCostRange.T_COST_RANGE.LOWER_BOUND;
    }

    @Override
    public Field<BigDecimal> field3() {
        return TCostRange.T_COST_RANGE.UPPER_BOUND;
    }

    @Override
    public Field<BigDecimal> field4() {
        return TCostRange.T_COST_RANGE.INTERVAL_STEP;
    }

    @Override
    public Field<String> field5() {
        return TCostRange.T_COST_RANGE.RANGE_TEXT;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return TCostRange.T_COST_RANGE.CREATE_DATE;
    }

    @Override
    public Field<String> field7() {
        return TCostRange.T_COST_RANGE.CREATE_USER;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return TCostRange.T_COST_RANGE.LAST_UPDATE_DATE;
    }

    @Override
    public Field<String> field9() {
        return TCostRange.T_COST_RANGE.LAST_UPDATE_USER;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public BigDecimal component2() {
        return getLowerBound();
    }

    @Override
    public BigDecimal component3() {
        return getUpperBound();
    }

    @Override
    public BigDecimal component4() {
        return getIntervalStep();
    }

    @Override
    public String component5() {
        return getRangeText();
    }

    @Override
    public LocalDateTime component6() {
        return getCreateDate();
    }

    @Override
    public String component7() {
        return getCreateUser();
    }

    @Override
    public LocalDateTime component8() {
        return getLastUpdateDate();
    }

    @Override
    public String component9() {
        return getLastUpdateUser();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public BigDecimal value2() {
        return getLowerBound();
    }

    @Override
    public BigDecimal value3() {
        return getUpperBound();
    }

    @Override
    public BigDecimal value4() {
        return getIntervalStep();
    }

    @Override
    public String value5() {
        return getRangeText();
    }

    @Override
    public LocalDateTime value6() {
        return getCreateDate();
    }

    @Override
    public String value7() {
        return getCreateUser();
    }

    @Override
    public LocalDateTime value8() {
        return getLastUpdateDate();
    }

    @Override
    public String value9() {
        return getLastUpdateUser();
    }

    @Override
    public TCostRangeRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public TCostRangeRecord value2(BigDecimal value) {
        setLowerBound(value);
        return this;
    }

    @Override
    public TCostRangeRecord value3(BigDecimal value) {
        setUpperBound(value);
        return this;
    }

    @Override
    public TCostRangeRecord value4(BigDecimal value) {
        setIntervalStep(value);
        return this;
    }

    @Override
    public TCostRangeRecord value5(String value) {
        setRangeText(value);
        return this;
    }

    @Override
    public TCostRangeRecord value6(LocalDateTime value) {
        setCreateDate(value);
        return this;
    }

    @Override
    public TCostRangeRecord value7(String value) {
        setCreateUser(value);
        return this;
    }

    @Override
    public TCostRangeRecord value8(LocalDateTime value) {
        setLastUpdateDate(value);
        return this;
    }

    @Override
    public TCostRangeRecord value9(String value) {
        setLastUpdateUser(value);
        return this;
    }

    @Override
    public TCostRangeRecord values(Long value1, BigDecimal value2, BigDecimal value3, BigDecimal value4, String value5, LocalDateTime value6, String value7, LocalDateTime value8, String value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TCostRangeRecord
     */
    public TCostRangeRecord() {
        super(TCostRange.T_COST_RANGE);
    }

    /**
     * Create a detached, initialised TCostRangeRecord
     */
    public TCostRangeRecord(Long id, BigDecimal lowerBound, BigDecimal upperBound, BigDecimal intervalStep, String rangeText, LocalDateTime createDate, String createUser, LocalDateTime lastUpdateDate, String lastUpdateUser) {
        super(TCostRange.T_COST_RANGE);

        setId(id);
        setLowerBound(lowerBound);
        setUpperBound(upperBound);
        setIntervalStep(intervalStep);
        setRangeText(rangeText);
        setCreateDate(createDate);
        setCreateUser(createUser);
        setLastUpdateDate(lastUpdateDate);
        setLastUpdateUser(lastUpdateUser);
    }
}

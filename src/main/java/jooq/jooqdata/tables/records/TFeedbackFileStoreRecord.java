/*
 * This file is generated by jOOQ.
 */
package jooqdata.tables.records;


import java.time.LocalDateTime;
import java.util.UUID;

import jooqdata.tables.TFeedbackFileStore;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Таблица для хранения вложений ОС
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TFeedbackFileStoreRecord extends UpdatableRecordImpl<TFeedbackFileStoreRecord> implements Record10<Integer, LocalDateTime, String, String, String, Long, LocalDateTime, Integer, byte[], UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>admin.t_feedback_file_store.id</code>. ID
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>admin.t_feedback_file_store.id</code>. ID
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>admin.t_feedback_file_store.create_date</code>. Дата
     * создания
     */
    public void setCreateDate(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>admin.t_feedback_file_store.create_date</code>. Дата
     * создания
     */
    public LocalDateTime getCreateDate() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>admin.t_feedback_file_store.create_user</code>.
     * Создатель
     */
    public void setCreateUser(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>admin.t_feedback_file_store.create_user</code>.
     * Создатель
     */
    public String getCreateUser() {
        return (String) get(2);
    }

    /**
     * Setter for <code>admin.t_feedback_file_store.file_extension</code>.
     * Расширение
     */
    public void setFileExtension(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>admin.t_feedback_file_store.file_extension</code>.
     * Расширение
     */
    public String getFileExtension() {
        return (String) get(3);
    }

    /**
     * Setter for <code>admin.t_feedback_file_store.file_name</code>. Название
     * файла
     */
    public void setFileName(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>admin.t_feedback_file_store.file_name</code>. Название
     * файла
     */
    public String getFileName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>admin.t_feedback_file_store.file_size</code>. Размер
     * файла
     */
    public void setFileSize(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>admin.t_feedback_file_store.file_size</code>. Размер
     * файла
     */
    public Long getFileSize() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>admin.t_feedback_file_store.last_update_date</code>.
     * Последнее обновление
     */
    public void setLastUpdateDate(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>admin.t_feedback_file_store.last_update_date</code>.
     * Последнее обновление
     */
    public LocalDateTime getLastUpdateDate() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>admin.t_feedback_file_store.feedback_id</code>.
     */
    public void setFeedbackId(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>admin.t_feedback_file_store.feedback_id</code>.
     */
    public Integer getFeedbackId() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>admin.t_feedback_file_store.file_blob</code>. Файл
     */
    public void setFileBlob(byte[] value) {
        set(8, value);
    }

    /**
     * Getter for <code>admin.t_feedback_file_store.file_blob</code>. Файл
     */
    public byte[] getFileBlob() {
        return (byte[]) get(8);
    }

    /**
     * Setter for <code>admin.t_feedback_file_store.UID</code>. GUID для файла
     */
    public void setUid(UUID value) {
        set(9, value);
    }

    /**
     * Getter for <code>admin.t_feedback_file_store.UID</code>. GUID для файла
     */
    public UUID getUid() {
        return (UUID) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Integer, LocalDateTime, String, String, String, Long, LocalDateTime, Integer, byte[], UUID> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Integer, LocalDateTime, String, String, String, Long, LocalDateTime, Integer, byte[], UUID> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return TFeedbackFileStore.T_FEEDBACK_FILE_STORE.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return TFeedbackFileStore.T_FEEDBACK_FILE_STORE.CREATE_DATE;
    }

    @Override
    public Field<String> field3() {
        return TFeedbackFileStore.T_FEEDBACK_FILE_STORE.CREATE_USER;
    }

    @Override
    public Field<String> field4() {
        return TFeedbackFileStore.T_FEEDBACK_FILE_STORE.FILE_EXTENSION;
    }

    @Override
    public Field<String> field5() {
        return TFeedbackFileStore.T_FEEDBACK_FILE_STORE.FILE_NAME;
    }

    @Override
    public Field<Long> field6() {
        return TFeedbackFileStore.T_FEEDBACK_FILE_STORE.FILE_SIZE;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return TFeedbackFileStore.T_FEEDBACK_FILE_STORE.LAST_UPDATE_DATE;
    }

    @Override
    public Field<Integer> field8() {
        return TFeedbackFileStore.T_FEEDBACK_FILE_STORE.FEEDBACK_ID;
    }

    @Override
    public Field<byte[]> field9() {
        return TFeedbackFileStore.T_FEEDBACK_FILE_STORE.FILE_BLOB;
    }

    @Override
    public Field<UUID> field10() {
        return TFeedbackFileStore.T_FEEDBACK_FILE_STORE.UID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreateDate();
    }

    @Override
    public String component3() {
        return getCreateUser();
    }

    @Override
    public String component4() {
        return getFileExtension();
    }

    @Override
    public String component5() {
        return getFileName();
    }

    @Override
    public Long component6() {
        return getFileSize();
    }

    @Override
    public LocalDateTime component7() {
        return getLastUpdateDate();
    }

    @Override
    public Integer component8() {
        return getFeedbackId();
    }

    @Override
    public byte[] component9() {
        return getFileBlob();
    }

    @Override
    public UUID component10() {
        return getUid();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreateDate();
    }

    @Override
    public String value3() {
        return getCreateUser();
    }

    @Override
    public String value4() {
        return getFileExtension();
    }

    @Override
    public String value5() {
        return getFileName();
    }

    @Override
    public Long value6() {
        return getFileSize();
    }

    @Override
    public LocalDateTime value7() {
        return getLastUpdateDate();
    }

    @Override
    public Integer value8() {
        return getFeedbackId();
    }

    @Override
    public byte[] value9() {
        return getFileBlob();
    }

    @Override
    public UUID value10() {
        return getUid();
    }

    @Override
    public TFeedbackFileStoreRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TFeedbackFileStoreRecord value2(LocalDateTime value) {
        setCreateDate(value);
        return this;
    }

    @Override
    public TFeedbackFileStoreRecord value3(String value) {
        setCreateUser(value);
        return this;
    }

    @Override
    public TFeedbackFileStoreRecord value4(String value) {
        setFileExtension(value);
        return this;
    }

    @Override
    public TFeedbackFileStoreRecord value5(String value) {
        setFileName(value);
        return this;
    }

    @Override
    public TFeedbackFileStoreRecord value6(Long value) {
        setFileSize(value);
        return this;
    }

    @Override
    public TFeedbackFileStoreRecord value7(LocalDateTime value) {
        setLastUpdateDate(value);
        return this;
    }

    @Override
    public TFeedbackFileStoreRecord value8(Integer value) {
        setFeedbackId(value);
        return this;
    }

    @Override
    public TFeedbackFileStoreRecord value9(byte[] value) {
        setFileBlob(value);
        return this;
    }

    @Override
    public TFeedbackFileStoreRecord value10(UUID value) {
        setUid(value);
        return this;
    }

    @Override
    public TFeedbackFileStoreRecord values(Integer value1, LocalDateTime value2, String value3, String value4, String value5, Long value6, LocalDateTime value7, Integer value8, byte[] value9, UUID value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TFeedbackFileStoreRecord
     */
    public TFeedbackFileStoreRecord() {
        super(TFeedbackFileStore.T_FEEDBACK_FILE_STORE);
    }

    /**
     * Create a detached, initialised TFeedbackFileStoreRecord
     */
    public TFeedbackFileStoreRecord(Integer id, LocalDateTime createDate, String createUser, String fileExtension, String fileName, Long fileSize, LocalDateTime lastUpdateDate, Integer feedbackId, byte[] fileBlob, UUID uid) {
        super(TFeedbackFileStore.T_FEEDBACK_FILE_STORE);

        setId(id);
        setCreateDate(createDate);
        setCreateUser(createUser);
        setFileExtension(fileExtension);
        setFileName(fileName);
        setFileSize(fileSize);
        setLastUpdateDate(lastUpdateDate);
        setFeedbackId(feedbackId);
        setFileBlob(fileBlob);
        setUid(uid);
    }
}

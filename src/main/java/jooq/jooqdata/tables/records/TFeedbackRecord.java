/*
 * This file is generated by jOOQ.
 */
package jooqdata.tables.records;


import java.time.LocalDateTime;

import jooqdata.tables.TFeedback;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Обратная связь
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TFeedbackRecord extends UpdatableRecordImpl<TFeedbackRecord> implements Record7<Integer, String, String, LocalDateTime, String, LocalDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>admin.t_feedback.id</code>. ID
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>admin.t_feedback.id</code>. ID
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>admin.t_feedback.fb_theme_name</code>. Имя темы
     */
    public void setFbThemeName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>admin.t_feedback.fb_theme_name</code>. Имя темы
     */
    public String getFbThemeName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>admin.t_feedback.feedback_text</code>. Текст обращения
     */
    public void setFeedbackText(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>admin.t_feedback.feedback_text</code>. Текст обращения
     */
    public String getFeedbackText() {
        return (String) get(2);
    }

    /**
     * Setter for <code>admin.t_feedback.create_date</code>. Дата создания
     * обращения
     */
    public void setCreateDate(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>admin.t_feedback.create_date</code>. Дата создания
     * обращения
     */
    public LocalDateTime getCreateDate() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>admin.t_feedback.create_user</code>. Автор обращения
     */
    public void setCreateUser(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>admin.t_feedback.create_user</code>. Автор обращения
     */
    public String getCreateUser() {
        return (String) get(4);
    }

    /**
     * Setter for <code>admin.t_feedback.last_update_date</code>. Дата и время
     * изменения
     */
    public void setLastUpdateDate(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>admin.t_feedback.last_update_date</code>. Дата и время
     * изменения
     */
    public LocalDateTime getLastUpdateDate() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>admin.t_feedback.user_fullname</code>. ФИО инициатора
     */
    public void setUserFullname(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>admin.t_feedback.user_fullname</code>. ФИО инициатора
     */
    public String getUserFullname() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, String, String, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, String, String, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return TFeedback.T_FEEDBACK.ID;
    }

    @Override
    public Field<String> field2() {
        return TFeedback.T_FEEDBACK.FB_THEME_NAME;
    }

    @Override
    public Field<String> field3() {
        return TFeedback.T_FEEDBACK.FEEDBACK_TEXT;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return TFeedback.T_FEEDBACK.CREATE_DATE;
    }

    @Override
    public Field<String> field5() {
        return TFeedback.T_FEEDBACK.CREATE_USER;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return TFeedback.T_FEEDBACK.LAST_UPDATE_DATE;
    }

    @Override
    public Field<String> field7() {
        return TFeedback.T_FEEDBACK.USER_FULLNAME;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getFbThemeName();
    }

    @Override
    public String component3() {
        return getFeedbackText();
    }

    @Override
    public LocalDateTime component4() {
        return getCreateDate();
    }

    @Override
    public String component5() {
        return getCreateUser();
    }

    @Override
    public LocalDateTime component6() {
        return getLastUpdateDate();
    }

    @Override
    public String component7() {
        return getUserFullname();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getFbThemeName();
    }

    @Override
    public String value3() {
        return getFeedbackText();
    }

    @Override
    public LocalDateTime value4() {
        return getCreateDate();
    }

    @Override
    public String value5() {
        return getCreateUser();
    }

    @Override
    public LocalDateTime value6() {
        return getLastUpdateDate();
    }

    @Override
    public String value7() {
        return getUserFullname();
    }

    @Override
    public TFeedbackRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TFeedbackRecord value2(String value) {
        setFbThemeName(value);
        return this;
    }

    @Override
    public TFeedbackRecord value3(String value) {
        setFeedbackText(value);
        return this;
    }

    @Override
    public TFeedbackRecord value4(LocalDateTime value) {
        setCreateDate(value);
        return this;
    }

    @Override
    public TFeedbackRecord value5(String value) {
        setCreateUser(value);
        return this;
    }

    @Override
    public TFeedbackRecord value6(LocalDateTime value) {
        setLastUpdateDate(value);
        return this;
    }

    @Override
    public TFeedbackRecord value7(String value) {
        setUserFullname(value);
        return this;
    }

    @Override
    public TFeedbackRecord values(Integer value1, String value2, String value3, LocalDateTime value4, String value5, LocalDateTime value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TFeedbackRecord
     */
    public TFeedbackRecord() {
        super(TFeedback.T_FEEDBACK);
    }

    /**
     * Create a detached, initialised TFeedbackRecord
     */
    public TFeedbackRecord(Integer id, String fbThemeName, String feedbackText, LocalDateTime createDate, String createUser, LocalDateTime lastUpdateDate, String userFullname) {
        super(TFeedback.T_FEEDBACK);

        setId(id);
        setFbThemeName(fbThemeName);
        setFeedbackText(feedbackText);
        setCreateDate(createDate);
        setCreateUser(createUser);
        setLastUpdateDate(lastUpdateDate);
        setUserFullname(userFullname);
    }
}

/*
 * This file is generated by jOOQ.
 */
package jooqdata.tables.records;


import java.time.LocalDateTime;

import jooqdata.tables.TFeedbackThemes;

import org.jooq.Field;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.TableRecordImpl;


/**
 * Справочник тем для обратной связи
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TFeedbackThemesRecord extends TableRecordImpl<TFeedbackThemesRecord> implements Record7<Long, String, LocalDateTime, LocalDateTime, String, String, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>admin.t_feedback_themes.id</code>. ID
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>admin.t_feedback_themes.id</code>. ID
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>admin.t_feedback_themes.fb_theme_name</code>. Имя темы
     */
    public void setFbThemeName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>admin.t_feedback_themes.fb_theme_name</code>. Имя темы
     */
    public String getFbThemeName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>admin.t_feedback_themes.create_date</code>. Дата
     * создания темы
     */
    public void setCreateDate(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>admin.t_feedback_themes.create_date</code>. Дата
     * создания темы
     */
    public LocalDateTime getCreateDate() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>admin.t_feedback_themes.last_update_date</code>. Дата
     * изменения темы
     */
    public void setLastUpdateDate(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>admin.t_feedback_themes.last_update_date</code>. Дата
     * изменения темы
     */
    public LocalDateTime getLastUpdateDate() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>admin.t_feedback_themes.create_user</code>. Автор
     * создавший тему
     */
    public void setCreateUser(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>admin.t_feedback_themes.create_user</code>. Автор
     * создавший тему
     */
    public String getCreateUser() {
        return (String) get(4);
    }

    /**
     * Setter for <code>admin.t_feedback_themes.last_update_user</code>. Автор
     * изменения
     */
    public void setLastUpdateUser(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>admin.t_feedback_themes.last_update_user</code>. Автор
     * изменения
     */
    public String getLastUpdateUser() {
        return (String) get(5);
    }

    /**
     * Setter for <code>admin.t_feedback_themes.num</code>. Номер для сортировки
     */
    public void setNum(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>admin.t_feedback_themes.num</code>. Номер для сортировки
     */
    public Integer getNum() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, String, LocalDateTime, LocalDateTime, String, String, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, String, LocalDateTime, LocalDateTime, String, String, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return TFeedbackThemes.T_FEEDBACK_THEMES.ID;
    }

    @Override
    public Field<String> field2() {
        return TFeedbackThemes.T_FEEDBACK_THEMES.FB_THEME_NAME;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return TFeedbackThemes.T_FEEDBACK_THEMES.CREATE_DATE;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return TFeedbackThemes.T_FEEDBACK_THEMES.LAST_UPDATE_DATE;
    }

    @Override
    public Field<String> field5() {
        return TFeedbackThemes.T_FEEDBACK_THEMES.CREATE_USER;
    }

    @Override
    public Field<String> field6() {
        return TFeedbackThemes.T_FEEDBACK_THEMES.LAST_UPDATE_USER;
    }

    @Override
    public Field<Integer> field7() {
        return TFeedbackThemes.T_FEEDBACK_THEMES.NUM;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getFbThemeName();
    }

    @Override
    public LocalDateTime component3() {
        return getCreateDate();
    }

    @Override
    public LocalDateTime component4() {
        return getLastUpdateDate();
    }

    @Override
    public String component5() {
        return getCreateUser();
    }

    @Override
    public String component6() {
        return getLastUpdateUser();
    }

    @Override
    public Integer component7() {
        return getNum();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getFbThemeName();
    }

    @Override
    public LocalDateTime value3() {
        return getCreateDate();
    }

    @Override
    public LocalDateTime value4() {
        return getLastUpdateDate();
    }

    @Override
    public String value5() {
        return getCreateUser();
    }

    @Override
    public String value6() {
        return getLastUpdateUser();
    }

    @Override
    public Integer value7() {
        return getNum();
    }

    @Override
    public TFeedbackThemesRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public TFeedbackThemesRecord value2(String value) {
        setFbThemeName(value);
        return this;
    }

    @Override
    public TFeedbackThemesRecord value3(LocalDateTime value) {
        setCreateDate(value);
        return this;
    }

    @Override
    public TFeedbackThemesRecord value4(LocalDateTime value) {
        setLastUpdateDate(value);
        return this;
    }

    @Override
    public TFeedbackThemesRecord value5(String value) {
        setCreateUser(value);
        return this;
    }

    @Override
    public TFeedbackThemesRecord value6(String value) {
        setLastUpdateUser(value);
        return this;
    }

    @Override
    public TFeedbackThemesRecord value7(Integer value) {
        setNum(value);
        return this;
    }

    @Override
    public TFeedbackThemesRecord values(Long value1, String value2, LocalDateTime value3, LocalDateTime value4, String value5, String value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TFeedbackThemesRecord
     */
    public TFeedbackThemesRecord() {
        super(TFeedbackThemes.T_FEEDBACK_THEMES);
    }

    /**
     * Create a detached, initialised TFeedbackThemesRecord
     */
    public TFeedbackThemesRecord(Long id, String fbThemeName, LocalDateTime createDate, LocalDateTime lastUpdateDate, String createUser, String lastUpdateUser, Integer num) {
        super(TFeedbackThemes.T_FEEDBACK_THEMES);

        setId(id);
        setFbThemeName(fbThemeName);
        setCreateDate(createDate);
        setLastUpdateDate(lastUpdateDate);
        setCreateUser(createUser);
        setLastUpdateUser(lastUpdateUser);
        setNum(num);
    }
}

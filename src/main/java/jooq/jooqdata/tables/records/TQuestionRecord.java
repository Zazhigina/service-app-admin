/*
 * This file is generated by jOOQ.
 */
package jooqdata.tables.records;


import java.time.LocalDateTime;

import jooqdata.tables.TQuestion;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Преднастроенный вопрос
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TQuestionRecord extends UpdatableRecordImpl<TQuestionRecord> implements Record8<Long, String, Integer, LocalDateTime, LocalDateTime, String, LocalDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>admin.t_question.id</code>. Первичный ключ
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>admin.t_question.id</code>. Первичный ключ
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>admin.t_question.name</code>. Наименование
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>admin.t_question.name</code>. Наименование
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>admin.t_question.order_no</code>. Номер вопроса
     */
    public void setOrderNo(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>admin.t_question.order_no</code>. Номер вопроса
     */
    public Integer getOrderNo() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>admin.t_question.actual_to</code>. Срок действия
     */
    public void setActualTo(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>admin.t_question.actual_to</code>. Срок действия
     */
    public LocalDateTime getActualTo() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>admin.t_question.create_date</code>. Дата и время
     * создания
     */
    public void setCreateDate(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>admin.t_question.create_date</code>. Дата и время
     * создания
     */
    public LocalDateTime getCreateDate() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>admin.t_question.create_user</code>. Автор создания
     */
    public void setCreateUser(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>admin.t_question.create_user</code>. Автор создания
     */
    public String getCreateUser() {
        return (String) get(5);
    }

    /**
     * Setter for <code>admin.t_question.last_update_date</code>. Дата и время
     * изменения
     */
    public void setLastUpdateDate(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>admin.t_question.last_update_date</code>. Дата и время
     * изменения
     */
    public LocalDateTime getLastUpdateDate() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>admin.t_question.last_update_user</code>. Автор
     * изменения
     */
    public void setLastUpdateUser(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>admin.t_question.last_update_user</code>. Автор
     * изменения
     */
    public String getLastUpdateUser() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, String, Integer, LocalDateTime, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, String, Integer, LocalDateTime, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return TQuestion.T_QUESTION.ID;
    }

    @Override
    public Field<String> field2() {
        return TQuestion.T_QUESTION.NAME;
    }

    @Override
    public Field<Integer> field3() {
        return TQuestion.T_QUESTION.ORDER_NO;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return TQuestion.T_QUESTION.ACTUAL_TO;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return TQuestion.T_QUESTION.CREATE_DATE;
    }

    @Override
    public Field<String> field6() {
        return TQuestion.T_QUESTION.CREATE_USER;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return TQuestion.T_QUESTION.LAST_UPDATE_DATE;
    }

    @Override
    public Field<String> field8() {
        return TQuestion.T_QUESTION.LAST_UPDATE_USER;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Integer component3() {
        return getOrderNo();
    }

    @Override
    public LocalDateTime component4() {
        return getActualTo();
    }

    @Override
    public LocalDateTime component5() {
        return getCreateDate();
    }

    @Override
    public String component6() {
        return getCreateUser();
    }

    @Override
    public LocalDateTime component7() {
        return getLastUpdateDate();
    }

    @Override
    public String component8() {
        return getLastUpdateUser();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Integer value3() {
        return getOrderNo();
    }

    @Override
    public LocalDateTime value4() {
        return getActualTo();
    }

    @Override
    public LocalDateTime value5() {
        return getCreateDate();
    }

    @Override
    public String value6() {
        return getCreateUser();
    }

    @Override
    public LocalDateTime value7() {
        return getLastUpdateDate();
    }

    @Override
    public String value8() {
        return getLastUpdateUser();
    }

    @Override
    public TQuestionRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public TQuestionRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public TQuestionRecord value3(Integer value) {
        setOrderNo(value);
        return this;
    }

    @Override
    public TQuestionRecord value4(LocalDateTime value) {
        setActualTo(value);
        return this;
    }

    @Override
    public TQuestionRecord value5(LocalDateTime value) {
        setCreateDate(value);
        return this;
    }

    @Override
    public TQuestionRecord value6(String value) {
        setCreateUser(value);
        return this;
    }

    @Override
    public TQuestionRecord value7(LocalDateTime value) {
        setLastUpdateDate(value);
        return this;
    }

    @Override
    public TQuestionRecord value8(String value) {
        setLastUpdateUser(value);
        return this;
    }

    @Override
    public TQuestionRecord values(Long value1, String value2, Integer value3, LocalDateTime value4, LocalDateTime value5, String value6, LocalDateTime value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TQuestionRecord
     */
    public TQuestionRecord() {
        super(TQuestion.T_QUESTION);
    }

    /**
     * Create a detached, initialised TQuestionRecord
     */
    public TQuestionRecord(Long id, String name, Integer orderNo, LocalDateTime actualTo, LocalDateTime createDate, String createUser, LocalDateTime lastUpdateDate, String lastUpdateUser) {
        super(TQuestion.T_QUESTION);

        setId(id);
        setName(name);
        setOrderNo(orderNo);
        setActualTo(actualTo);
        setCreateDate(createDate);
        setCreateUser(createUser);
        setLastUpdateDate(lastUpdateDate);
        setLastUpdateUser(lastUpdateUser);
    }

    /**
     * Create a detached, initialised TQuestionRecord
     */
    public TQuestionRecord(jooqdata.tables.pojos.TQuestion value) {
        super(TQuestion.T_QUESTION);

        if (value != null) {
            setId(value.getId());
            setName(value.getName());
            setOrderNo(value.getOrderNo());
            setActualTo(value.getActualTo());
            setCreateDate(value.getCreateDate());
            setCreateUser(value.getCreateUser());
            setLastUpdateDate(value.getLastUpdateDate());
            setLastUpdateUser(value.getLastUpdateUser());
        }
    }
}

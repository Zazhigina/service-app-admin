logging:
  charset:
    console: UTF-8
  level:
    root: INFO

springdoc:
  swagger-ui:
    path: /public/swagger-ui.html
    config-url: /api/admin/v3/api-docs/swagger-config
    url: /api/admin/v3/api-docs

server:
  forward-headers-strategy: framework
  shutdown: "graceful"
  connection-timeout: 60000
  max-http-header-size: 8192

management:
  server:
    port: 8081
  metrics:
    tags:
      application: ${spring.application.name}/${APPLICATION_VERSION}
    export:
      prometheus.enabled: true
    distribution:
      percentiles-histogram.http.server.requests: true
      sla.http.server.requests: 100 мс, 150 мс, 250 мс, 500 мс, 1 с
    enable.jvm: true
  endpoints:
    web.exposure.include: 'prometheus,metrics,health'
  endpoint:
    health.probes.enabled: true
  health:
    livenessState.enabled: true
    readinessState.enabled: true

spring:
  main:
    log-startup-info: false
    banner-mode: "off"
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${MIRROR_DATASOURCE_URL}?ApplicationName=${SPRING_APPLICATION_NAME}/${APPLICATION_VERSION}
    username:
    password:
    hikari:
      maximum-pool-size: 10
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: none
    open-in-view: false
  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 20MB
  flyway:
    defaultSchema: ${DB_SCHEMA}
    baselineOnMigrate: true
    enabled: true
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${MIRROR_KEYCLOAK_BASE_URL}/realms/${MIRROR_KEYCLOAK_REALM}/protocol/openid-connect/certs

mirror:
  endpoint:
    rbac: ${MIRROR_ENDPOINT_RBAC}
    ma: ${MIRROR_ENDPOINT_MA}
    integration: ${MIRROR_ENDPOINT_INTEGRATION}
    doc: ${MIRROR_ENDPOINT_DOC}
    ep: ${MIRROR_ENDPOINT_EP}
    nsi: ${MIRROR_ENDPOINT_NSI}
    prcat: ${MIRROR_ENDPOINT_PRCAT}
    report: ${MIRROR_ENDPOINT_REPORT}
    chat: ${MIRROR_ENDPOINT_CHAT}
    user-profile: ${MIRROR_ENDPOINT_USER_PROFILE}
    notification: ${MIRROR_ENDPOINT_NOTIFICATION}
    es-data-mgmt: ${MIRROR_ENDPOINT_PY_ES_DATA_MGMT}
  application:
    user-agent: ${SPRING_APPLICATION_NAME}/${APPLICATION_VERSION}
  keycloak:
    base-url: ${MIRROR_KEYCLOAK_BASE_URL}
    realm: ${MIRROR_KEYCLOAK_REALM}
    client-id: ${MIRROR_KEYCLOAK_CLIENT_ID}
    client-secret: ${MIRROR_KEYCLOAK_CLIENT_SECRET}
  schedule:
    tasks:
      username:
      password:
      cron:
        replicate-procedure-records: ${MIRROR_SCHEDULE_TASKS_CRON_REPLICATE_PROCEDURE_RECORDS:0 0 1 20 * ?}
        save-search-history: ${MIRROR_SCHEDULE_TASKS_CRON_SAVE_SEARCH_HISTORY:0 30 23 * * *}
        notify-offer-end: ${MIRROR_SCHEDULE_TASKS_CRON_NOTIFY_OFFER_END:0 0 9 * * *}
        status-offer-end: ${MIRROR_SCHEDULE_TASKS_CRON_CHANGE_STATUS_OFFER_END:0 1 0 * * *}
        notification-process: ${MIRROR_SCHEDULE_TASKS_CRON_NOTIFICATION_PROCESS:0 0 1 * * *}